version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: BackDockerFile  # 指定 后端Dockerfile 的路径
    ports:
      - "9011:9011"
    environment:
      MYSQL_HOST: db
      MYSQL_PORT: 3306
      MYSQL_USER: root
      MYSQL_PASSWORD: ''
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ''
      REDIS_DATABASE: 0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
  frontend:
    build:
      context: .
      dockerfile: FrontDockerfile  # 指定前端Dockerfile的路径
    ports:
      - "80:80"  # 将容器的 80 端口映射到主机的 80 端口
    depends_on:
      - backend  # 确保 backend 服务先启动
  db:
    image: mysql:8.0
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
      MYSQL_ROOT_PASSWORD: ''
      MYSQL_DATABASE: 'file_system'
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
volumes:
  db_data:

networks:
  app-network: